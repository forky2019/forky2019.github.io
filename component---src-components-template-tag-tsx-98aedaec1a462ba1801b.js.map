{"version":3,"sources":["webpack:///./src/components/template.tag.tsx"],"names":["query","TemplateTag","data","pageContext","allMarkdownRemark","totalCount","edges","tag","map","edge","node","frontmatter","title"],"mappings":"2FACA,kFAoBaA,EAAQ,aAeNC,UA3BK,SAAC,GAAiC,IAA/BC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,YAAyB,EACtBD,EAAKE,kBAA3BC,EAD4C,EAC5CA,WAAYC,EADgC,EAChCA,MACdC,EAAMJ,EAAYI,IAExB,OACE,kBAAC,IAAD,KACMA,EADN,KACcF,EADd,IAEGC,EAAME,KAAI,SAACC,GAAD,OAAUA,EAAKC,KAAKC,YAAYC","file":"component---src-components-template-tag-tsx-98aedaec1a462ba1801b.js","sourcesContent":["import { graphql, PageProps } from \"gatsby\";\nimport React from \"react\";\nimport { IAllMarkdownRemark } from \"../constants/types\";\nimport Layout from \"./layout\";\ninterface Props extends PageProps {\n  data: IAllMarkdownRemark;\n  pageContext: { tag: string };\n}\n\nconst TemplateTag = ({ data, pageContext }: Props) => {\n  const { totalCount, edges } = data.allMarkdownRemark;\n  const tag = pageContext.tag;\n\n  return (\n    <Layout>\n      {`${tag} (${totalCount})`}\n      {edges.map((edge) => edge.node.frontmatter.title)}\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query($tag: String) {\n    allMarkdownRemark(filter: { frontmatter: { tags: { in: [$tag] } } }) {\n      totalCount\n      edges {\n        node {\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default TemplateTag;\n"],"sourceRoot":""}