{"version":3,"sources":["webpack:///./src/model/postModel.ts","webpack:///./src/components/organisms/postItem.tsx","webpack:///./src/pages/posts.tsx","webpack:///./src/constants/color.ts"],"names":["PostModel","node","frontmatter","Object","assign","this","Container","styled","div","Color","white","BorderBox","props","color","css","ContentBox","img","Title","h2","SubtitleBox","Subtitle","span","gray75","DateText","MetaContainer","ReadMore","blue","PostItem","post","title","path","date","subtitle","useState","over","setOver","onMouseEnter","onMouseLeave","to","style","width","height","pageQuery","Post","posts","data","allMarkdownRemark","edges","map","black","gray"],"mappings":"8LAEqBA,EAOnB,SAAYC,GAAW,IACbC,EAAgBD,EAAhBC,YACRC,OAAOC,OAAOC,KAAMH,I,oCC8BlBI,EAAYC,IAAOC,IAAV,sEAAGD,CAAH,2GAMOE,IAAMC,OAGtBC,EAAYJ,IAAOC,IAAV,sEAAGD,CAAH,6EAMX,SAACK,GAAD,OACAA,EAAMC,OACNC,YADA,0BAEsBF,EAAMC,UAQ1BE,GALSR,IAAOS,IAAV,mEAAGT,CAAH,iDAKOA,IAAOC,IAAV,uEAAGD,CAAH,mFAMVU,EAAQV,IAAOW,GAAV,kEAAGX,CAAH,sDAKLY,EAAcZ,IAAOC,IAAV,wEAAGD,CAAH,qBAGXa,EAAWb,IAAOc,KAAV,qEAAGd,CAAH,8BAEHE,IAAMa,QAEXC,EAAWhB,IAAOc,KAAV,qEAAGd,CAAH,8BACHE,IAAMa,QAGXE,EAAgBjB,IAAOC,IAAV,0EAAGD,CAAH,MAEbkB,EAAWlB,IAAOC,IAAV,qEAAGD,CAAH,uCAGHE,IAAMiB,MAGFC,EAvFE,SAAC,GAAoB,IAAlBC,EAAkB,EAAlBA,KACVC,EAAgCD,EAAhCC,MAAOC,EAAyBF,EAAzBE,KAAMC,EAAmBH,EAAnBG,KAAMC,EAAaJ,EAAbI,SADS,EAEZC,oBAAS,GAA1BC,EAF6B,KAEvBC,EAFuB,KAIpC,OACE,kBAAC7B,EAAD,CACE8B,aAAc,WACZD,GAAQ,IAEVE,aAAc,WACZF,GAAQ,KAGV,kBAAC,IAAD,CAAMG,GAAIR,EAAMS,MAAO,CAAEC,MAAO,OAAQC,OAAQ,SAC9C,kBAAC9B,EAAD,CAAWE,MAAOqB,EAAOzB,IAAMiB,KAAOjB,IAAMC,OAC1C,kBAACK,EAAD,KACE,kBAACE,EAAD,KAAQY,GACR,kBAACV,EAAD,KACGa,GAAY,kBAACZ,EAAD,KAAWY,IAE1B,kBAACR,EAAD,KACE,kBAACD,EAAD,KAAWQ,GACX,kBAACN,EAAD,KAAWS,GAAQ,kDCNpBQ,EAAY,YAiBVC,UApCF,SAAC,GAAa,IAKnBC,EALmB,EAAXC,KAEZC,kBAAqBC,MAGSC,KAAI,YAAc,IAAX/C,EAAW,EAAXA,KACrC,OAAO,IAAID,EAAUC,MAGvB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK4B,MAAM,SACVe,EAAMI,KAAI,SAACpB,GACV,OAAO,kBAAC,EAAD,CAAUA,KAAMA,U,kCCZhBnB,IARD,CACZC,MAAO,UACPuC,MAAO,UACP3B,OAAQ,UACR4B,KAAM,UACNxB,KAAM","file":"component---src-pages-posts-tsx-e244f858938349694625.js","sourcesContent":["import { INode, IPost } from \"../constants/types\";\n\nexport default class PostModel implements IPost {\n  title;\n  path;\n  date;\n  subtitle?;\n  primate?;\n\n  constructor(node: any) {\n    const { frontmatter } = node;\n    Object.assign(this, frontmatter);\n  }\n}\n","import React, { useState, CSSProperties } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport PostModel from \"../../model/postModel\";\nimport Link from \"../atom/link\";\nimport Color from \"../../constants/color\";\n\ninterface Props {\n  post: PostModel;\n}\n\nconst PostItem = ({ post }: Props) => {\n  const { title, path, date, subtitle } = post;\n  const [over, setOver] = useState(false);\n\n  return (\n    <Container\n      onMouseEnter={() => {\n        setOver(true);\n      }}\n      onMouseLeave={() => {\n        setOver(false);\n      }}\n    >\n      <Link to={path} style={{ width: \"100%\", height: \"100%\" }}>\n        <BorderBox color={over ? Color.blue : Color.white}>\n          <ContentBox>\n            <Title>{title}</Title>\n            <SubtitleBox>\n              {subtitle && <Subtitle>{subtitle}</Subtitle>}\n            </SubtitleBox>\n            <MetaContainer>\n              <DateText>{date}</DateText>\n              <ReadMore>{over && <span>Read More</span>}</ReadMore>\n            </MetaContainer>\n          </ContentBox>\n        </BorderBox>\n      </Link>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  display: flex;\n  height: 170px;\n  border: 1px solid;\n  padding: 10px;\n  margin: 10px 0px 10px 0px;\n  background-color: ${Color.white};\n`;\n\nconst BorderBox = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  flex-direction: row;\n  padding: 10px;\n  ${(props) =>\n    props.color &&\n    css`\n      border: 1px solid ${props.color};\n    `}\n`;\nconst ImgBox = styled.img`\n  width: 130px;\n  height: 130px;\n  margin-right: 10px;\n`;\nconst ContentBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  justify-content: space-between;\n`;\nconst Title = styled.h2`\n  padding: 0;\n  margin-bottom: 0;\n  border-bottom-width: 0;\n`;\nconst SubtitleBox = styled.div`\n  flex-grow: auto;\n`;\nconst Subtitle = styled.span`\n  font-size: 16px;\n  color: ${Color.gray75};\n`;\nconst DateText = styled.span`\n  color: ${Color.gray75};\n  font-size: 13px;\n`;\nconst MetaContainer = styled.div``;\n\nconst ReadMore = styled.div`\n  height: 30px;\n  float: right;\n  color: ${Color.blue};\n`;\n\nexport default PostItem;\n","import React from \"react\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport { graphql } from \"gatsby\";\nimport PostModel from \"../model/postModel\";\nimport PostItem from \"../components/organisms/postItem\";\n\nconst Post = ({ data }) => {\n  const {\n    allMarkdownRemark: { edges },\n  } = data;\n\n  const posts: Array<any> = edges.map(({ node }) => {\n    return new PostModel(node);\n  });\n\n  return (\n    <Layout>\n      <SEO title=\"post\" />\n      {posts.map((post) => {\n        return <PostItem post={post} />;\n      })}\n    </Layout>\n  );\n};\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark {\n      edges {\n        node {\n          frontmatter {\n            date(formatString: \"YYYY-MM-DD\")\n            path\n            title\n            subtitle\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default Post;\n","const Color = {\n  white: \"#ffffff\",\n  black: \"#000000\",\n  gray75: \"#757575\",\n  gray: \"#36313d\",\n  blue: \"#1167b1\",\n};\n\nexport default Color;\n"],"sourceRoot":""}